module simple_card(
	input wire VCC,
	input wire GND,
	input wire clk,				// generated by motherboard clock generator
	input wire rst_n,			// probably a button on the motherboard
	input wire we,				// active high
	input wire oe,				// active high
	inout wire [7:0] data,
	input wire [15:0] addr,	    // 64k address space is suppored by default. More address bits may be added later
	output wire int_n			// pulled up by motherboard; driven down by any peripheral (could be used for interrupts)
);

wire ce_n;		// chip enable signal
wire we1_n;		// true write enable signal
wire oe1_n; 	// true output enable signal

assign ce_n = ~(addr == 16'h4000); // address 16k

assign we1_n = ~(we & ~ce_n);
assign oe1_n = ~(oe & ~ce_n);

reg [7:0] q;
assign data = oe1_n == 1'b0 ? q : 8'bz;

always @(posedge clk) begin
	if (rst_n == 1'b0) begin
		q <= 8'd0;
	end else if (we1_n == 1'b0) begin
		q <= data;
	end
end


endmodule